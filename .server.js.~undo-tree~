"db9f5a9c40fedf6c210cda1e275859d2995907ed"
[cl-struct-undo-tree [nil ([nil (#1=[nil nil ((#("

" 0 2 (fontified t)) . 339) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -2) (233 . 317) (#("app.get('*', (req, res) =>
  res.sendFile(path.join(__dirname, '/dist/index.html'))
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 11 (fontified t face font-lock-string-face) 11 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-2-face)) 14 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 63 (fontified t) 63 81 (fontified t face font-lock-string-face) 81 82 (fontified t face (rainbow-delimiters-depth-3-face)) 82 83 (fontified t face (rainbow-delimiters-depth-2-face)) 83 84 (fontified t)) . 233) (undo-tree-id3 . -27) (undo-tree-id4 . -27) (undo-tree-id5 . -84) (undo-tree-id6 . -84) (undo-tree-id7 . -84) (199 . 232) (#("app.use(express.static('dist'));
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 16 (fontified t) 16 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (rainbow-delimiters-depth-2-face)) 30 31 (fontified t face (rainbow-delimiters-depth-1-face)) 31 33 (fontified t)) . 199) (undo-tree-id8 . -33) (undo-tree-id9 . -33) (undo-tree-id10 . -33) (1 . 111) (#("const express = require('express');
const path = require('path');
const compression = require('compression');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 13 (fontified t face font-lock-variable-name-face) 13 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 36 (fontified t) 36 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 46 (fontified t face font-lock-variable-name-face) 46 56 (fontified t) 56 57 (fontified t face (rainbow-delimiters-depth-1-face)) 57 63 (fontified t face font-lock-string-face) 63 64 (fontified t face (rainbow-delimiters-depth-1-face)) 64 66 (fontified t) 66 71 (fontified t face font-lock-keyword-face) 71 72 (fontified t) 72 83 (fontified t face font-lock-variable-name-face) 83 93 (fontified t) 93 94 (fontified t face (rainbow-delimiters-depth-1-face)) 94 107 (fontified t face font-lock-string-face) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 110 (fontified t)) . 1) (undo-tree-id11 . -36) (undo-tree-id12 . -36) (undo-tree-id13 . -66) (undo-tree-id14 . -66) (undo-tree-id15 . -110) (undo-tree-id16 . -110) (undo-tree-id17 . -36) (undo-tree-id18 . -36) (undo-tree-id19 . -36) (undo-tree-id20 . -110)) nil (23127 52439 435869 160000) 0 nil]) ((#("
" 0 1 (fontified t)) . -173) (undo-tree-id21 . -1) (#("c" 0 1 (fontified t)) . -174) (undo-tree-id22 . -1) (#("o" 0 1 (fontified t)) . -175) (undo-tree-id23 . -1) (#("n" 0 1 (fontified t)) . -176) (undo-tree-id24 . -1) (#("s" 0 1 (fontified t)) . -177) (undo-tree-id25 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -178) (undo-tree-id26 . -1) 179 (#(" " 0 1 (fontified t)) . -179) (undo-tree-id27 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -180) (undo-tree-id28 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -181) (undo-tree-id29 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -182) (undo-tree-id30 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -183) (undo-tree-id31 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -184) (undo-tree-id32 . -1) 185 (184 . 185) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -184) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -185) (undo-tree-id34 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -186) (undo-tree-id35 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -187) (undo-tree-id36 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -188) (undo-tree-id37 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -189) (undo-tree-id38 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -190) (undo-tree-id39 . -1) 191 (180 . 191) (#("comp" 0 4 (fontified t face font-lock-variable-name-face)) . -180) (undo-tree-id40 . -4) 184 (180 . 184) (174 . 180) (173 . 174) (t 23127 44149 991149 770000) 151) nil (23127 52439 435893 836000) 0 nil]) nil nil (23127 52439 435899 575000) 0 nil] #1# 884 2 nil]